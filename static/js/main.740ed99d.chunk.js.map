{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","placeholder","value","autoFocus","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUA+BeA,EA5BF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACb,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAaA,OACG,uBAAMC,UAAU,iBAAiBC,SAZf,SAACC,GACnBA,EAAMC,iBAEwB,KAA1BL,EAAeM,SAInBR,EAAWE,GACXC,EAAkB,MAIlB,UACG,uBACGC,UAAU,0BACVK,YAAY,wBACZC,MAAOR,EACPS,WAAS,EACTC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBV,EAAkBU,EAAOH,UAEtD,wBAAQN,UAAU,6BAAlB,+BCOMU,G,MA9BD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,eAAhC,OACZ,oBAAId,UAAU,OAAd,SACGW,EAAMI,KAAI,SAAAC,GAAI,OACb,qBACEhB,UAAS,qBAAgBgB,EAAKC,KAAOL,EACjC,SACA,IAHN,UAKE,wBACEZ,UAAU,mCACVkB,QAAS,kBAAMJ,EAAeE,EAAKG,KAFrC,SAIGH,EAAKC,KAAO,SAAM,KAErB,uBAAMjB,UAAS,oBACAgB,EAAKC,KAAO,oBAAsB,IADjD,UAGGD,EAAKG,GAHR,MAGeH,EAAKI,WAEpB,wBACEpB,UAAU,qCACVkB,QAAS,kBAAML,EAAWG,EAAKG,KAFjC,4BAhBOH,EAAKG,WCkBLE,G,MArBC,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUU,EAApB,EAAoBA,eAAgBC,EAApC,EAAoCA,WAApC,OAEd,qBAAKvB,UAAU,YAAf,SACGW,EAAMa,OAAS,GACd,qCACE,yBAAQN,QAASI,EAAgBtB,UAAU,oBAA3C,UACGY,EAAW,aAAU,QADxB,qBAGA,wBACEM,QAASK,EACTvB,UAAU,oBACVyB,SAAUd,EAAMe,OAAO,SAAAV,GAAI,OAAIA,EAAKC,QAHtC,0CCEOU,G,MAVC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,mBAAhB,OACZ,0BAAS9B,UAAU,UAAnB,UACI,yBAAQA,UAAU,qBAAlB,UACI,qBAAIA,UAAU,iBAAd,cAAiC4B,EAAjC,OACCE,KAEJD,OCHME,EAJA,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OACX,6BAAKA,KCMMI,G,MANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,sBAAMjC,UAAU,YAAhB,SACKiC,MCwEMC,MApEf,WACE,MAAgCrC,oBAAS,GAAzC,mBAAOe,EAAP,KAAiBuB,EAAjB,KACA,EAA0BtC,mBAAS,IAAnC,mBAAOc,EAAP,KAAcyB,EAAd,KAsCA,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQR,MAAM,qBACd,cAAC,EAAD,CACEA,MAAM,qBACNC,KAAM,cAAE,EAAF,CAAOjC,WAhBA,SAACwB,GAClBgB,GAAS,SAAAzB,GAAK,4BACTA,GADS,CAEZ,CACES,UACAH,MAAM,EACNE,GAAIR,EAAMa,OAASb,EAAMA,EAAMa,OAAS,GAAGL,GAAK,EAAI,aAYtD,cAAC,EAAD,CACES,MAAM,mBACNC,KACE,cAAE,EAAF,CACElB,MAAOA,EACPC,SAAUA,EACVC,WA7CS,SAACM,GAClBiB,GAAS,SAAAzB,GAAK,OAAIA,EAAM0B,QAAO,SAAArB,GAAI,OAAIA,EAAKG,KAAOA,SA6C3CL,eA1Ca,SAACK,GACtBiB,GAAS,SAAAzB,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GAC1B,OAAIA,EAAKG,KAAOA,EACP,2BAAKH,GAAZ,IAAkBC,MAAOD,EAAKC,OAGzBD,WAsCLc,mBACE,cAAC,EAAD,CACEnB,MAAOA,EACPC,SAAUA,EACVU,eAxDa,WACrBa,GAAY,SAAAvB,GAAQ,OAAKA,MAwDjBW,WAvCS,WACjBa,GAAS,SAAAzB,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GAAI,kCAC3BA,GAD2B,IAE9BC,MAAM,mBCtBGqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.740ed99d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\n\nconst Form = ({ addNewTask }) => {\n   const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n   const onFormSubmit = (event) => {\n      event.preventDefault();\n\n      if (newTaskContent.trim() === \"\") {\n         return;\n      };\n\n      addNewTask(newTaskContent);\n      setNewTaskContent(\"\");\n   };\n\n   return (\n      <form className=\"form__toDoList\" onSubmit={onFormSubmit}>\n         <input\n            className=\"form__toDoList--newTask\"\n            placeholder=\"Co jest do zrobienia?\"\n            value={newTaskContent}\n            autoFocus\n            onChange={({ target }) => setNewTaskContent(target.value)}\n         />\n         <button className=\"form__toDoList--taskButton\">Dodaj zadanie</button>\n      </form>\n   );\n};\n\nexport default Form;","import React from \"react\";\nimport \"./style.css\";\n\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\n  <ul className=\"list\">\n    {tasks.map(task => (\n      <li key={task.id}\n        className={`list__item ${task.done & hideDone\n          ? \" hide \"\n          : \"\"}`\n        }>\n        <button\n          className=\"list__button list__button--done \"\n          onClick={() => toggleTaskDone(task.id)}\n        >\n          {task.done ? \"âœ”\" : \"\"}\n        </button>\n        <span className={\n          `list__task${task.done ? \" list__task--done\" : \"\"}`\n        }>\n          {task.id} - {task.content}\n        </span>\n        <button\n          className=\"list__button list__button--remove \"\n          onClick={() => removeTask(task.id)}\n        >\n          ðŸ—‘\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default Tasks;","import React from \"react\";\nimport \"./style.css\";\n\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\n\n  <div className=\"subHeader\">\n    {tasks.length > 0 && (\n      <>\n        <button onClick={toggleHideDone} className=\"subHeader__button\">\n          {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\n      </button>\n        <button\n          onClick={setAllDone}\n          className=\"subHeader__button\"\n          disabled={tasks.every((task => task.done))}\n        >\n          UkoÅ„cz wszystkie\n      </button>\n      </>\n    )}\n  </div>\n);\n\n\nexport default Buttons;","import React from \"react\";\nimport \"./style.css\"\n\nconst Section = ({ title, body, extraHeaderContent }) => (\n    <section className=\"section\">\n        <header className=\"section__subHeader\">\n            <h2 className=\"section__title\"> {title} </h2>\n            {extraHeaderContent}\n        </header>\n        {body}\n    </section>\n);\n\nexport default Section;\n","import React from \"react\";\n\nconst Header = ({ title }) => (\n    <h1>{title}</h1>\n);\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nconst Container = ({ children }) => (\n    <main className=\"container\">\n        {children}\n    </main>\n);\n\nexport default Container;","import React, { useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={< Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={\n          < Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone} />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone} />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}