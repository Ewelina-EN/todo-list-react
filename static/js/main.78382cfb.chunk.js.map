{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","useTasks.js","App.js","reportWebVitals.js","index.js","theme.js"],"names":["StyledForm","styled","form","theme","color","white","css","breakpoint","mobileMax","Input","input","lightGrey","Button","button","teal","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trim","current","focus","ref","placeholder","value","autoFocus","onChange","target","List","ul","Item","li","hidden","Content","span","done","green","remove","red","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","StyledButtons","div","grey","Buttons","toggleHideDone","setAllDone","length","disabled","every","StyledSection","section","silver","Header","header","Title","h2","Section","title","body","extraHeaderContent","StyledContainer","main","Container","children","getInitialTasks","tasksFromStorage","localStorage","getItem","JSON","parse","App","setHideDone","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","breakpoints","document","getElementById"],"mappings":"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","file":"static/js/main.78382cfb.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: flex;\r\n    background-color: ${({ theme }) => theme.color.white};\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 10px;\r\n\r\n    ${({ StyledForm }) => StyledForm && css`\r\n        @media(max-width:${({ theme }) => theme.breakpoint.mobileMax};) \r\n        {\r\n            grid-template-columns: 1fr;\r\n        }`\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    flex-basis: 75%;\r\n    flex-grow: 1;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    border: 1px solid ${({ theme }) => theme.color.lightGrey};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    flex-grow: 1;\r\n    background-color: ${({ theme }) => theme.color.teal};\r\n    color: ${({ theme }) => theme.color.white};\r\n    padding: 10px;\r\n    margin: 10px;\r\n    border: none;\r\n    transition: 1s;\r\n    cursor: pointer;\r\n        &:hover{\r\n            background-color: hsl(180, 100%, 30%);\r\n            transform: scale(1.1);\r\n            transition: 1s;\r\n        }\r\n        &:active{\r\n            background-color: hsl(180, 100%, 35%);\r\n        }\r\n`;","import React, { useState, useRef } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n   const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n   const inputRef = useRef(null);\r\n\r\n   const onFormSubmit = (event) => {\r\n      event.preventDefault();\r\n\r\n      if (newTaskContent.trim() === \"\") {\r\n         return;\r\n      };\r\n\r\n      addNewTask(newTaskContent);\r\n      setNewTaskContent(\"\");\r\n      inputRef.current.focus();\r\n   };\r\n\r\n   return (\r\n      <StyledForm\r\n         onSubmit={onFormSubmit}>\r\n         <Input\r\n            ref={inputRef}\r\n            placeholder=\"Co jest do zrobienia?\"\r\n            value={newTaskContent}\r\n            autoFocus\r\n            onChange={({ target }) => setNewTaskContent(target.value)}\r\n         />\r\n         <Button >Dodaj zadanie</Button>\r\n      </StyledForm>\r\n   );\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    background-color: ${({ theme }) => theme.color.white};\r\n    padding: 10px;\r\n    margin: auto;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.lightGrey};\r\n    padding: 10px;\r\n    align-items: center;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        word-break: break-word;\r\n        flex-basis: 100%;\r\n        flex-wrap: wrap;\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    text-align: center;\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: 0 10px;\r\n    border: none;\r\n    color: ${({ theme }) => theme.color.white};\r\n    font-size: 16px;\r\n    align-self: center;\r\n\r\n    ${({ done }) => done && css`\r\n        background-color: ${({ theme }) => theme.color.green};\r\n        cursor: pointer;\r\n        transition: 1s;\r\n        \r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: ${({ theme }) => theme.color.red};\r\n        cursor: pointer;\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            filter: brightness(120%);\r\n        }\r\n    `}\r\n`;","import React from \"react\";\r\nimport { List, Item, Button, Content } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <List>\r\n    {tasks.map(task => (\r\n      <Item\r\n        key={task.id}\r\n        hidden={task.done && hideDone}\r\n      >\r\n        <Button\r\n          done\r\n          onClick={() => toggleTaskDone(task.id)}\r\n        >\r\n          {task.done ? \"âœ”\" : \"\"}\r\n        </Button>\r\n        <Content done={task.done}>\r\n          {task.content}\r\n        </Content>\r\n        <Button\r\n          remove\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          ðŸ—‘\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const StyledButtons = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: transparent;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background-color: transparent;\r\n    color: ${({ theme }) => theme.color.teal};\r\n    margin: 5px;\r\n    border: none;\r\n    font-size: 15px;\r\n    transition: 1s;\r\n    cursor: pointer;\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n        &:active {\r\n            filter: brightness(120%);\r\n        }\r\n        &:disabled {\r\n            color: ${({ theme }) => theme.color.grey};\r\n            cursor: default;\r\n        } \r\n`;","import React from \"react\";\r\nimport { StyledButtons, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <StyledButtons>\r\n    {tasks.length > 0 && (\r\n      <>\r\n        <Button\r\n          onClick={toggleHideDone}\r\n        >\r\n          {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n        </Button>\r\n        <Button\r\n          onClick={setAllDone}\r\n          disabled={tasks.every((task => task.done))}\r\n        >\r\n          UkoÅ„cz wszystkie\r\n        </Button>\r\n      </>\r\n    )}\r\n  </StyledButtons>\r\n);\r\n\r\n\r\nexport default Buttons;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    margin: 10px 0;\r\n    background: ${({ theme }) => theme.color.white};\r\n    box-shadow: 0 0 5px  ${({ theme }) => theme.color.silver};\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.silver};\r\n    padding: 0 20px;\r\n    flex-wrap: wrap;\r\n\r\n    ${({ Header }) => Header && css`\r\n        @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n        flex-direction: column;\r\n  }`}\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 20px;\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { StyledSection, Header, Title } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <StyledSection>\r\n        <Header>\r\n            <Title> {title} </Title>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        {body}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Header = ({ title }) => (\r\n    <h1>{title}</h1>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    max-width: 800px;\r\n    margin: 20px auto;\r\n    padding: 0 20px;\r\n`;","import React from \"react\";\r\nimport { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","import { useState, useEffect } from \"react\";\r\n\r\nconst getInitialTasks = () => {\r\n    const tasksFromStorage = localStorage.getItem(\"tasks\");\r\n\r\n    return tasksFromStorage\r\n            ? JSON.parse(tasksFromStorage)\r\n            : [];\r\n};\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(getInitialTasks);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n\r\n            return task;\r\n        }));\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n            },\r\n        ]);\r\n    };\r\n    return {\r\n        tasks,\r\n        removeTask,\r\n        toggleTaskDone,\r\n        setAllDone,\r\n        addNewTask,\r\n    };\r\n};","import React, { useState } from 'react';\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport { useTasks } from \"./useTasks\";\r\n\r\nfunction App() {\r\n\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const {\r\n    tasks,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    setAllDone,\r\n    addNewTask,\r\n  } = useTasks();\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista zadaÅ„\" />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={< Form addNewTask={addNewTask} />}\r\n      />\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        body={\r\n          < Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone} />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone} />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { theme } from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n    color: {\r\n        teal: \"#008080\",\r\n        white: \"#FFFFFF\",\r\n        green: \"#2DBA26\",\r\n        red: \"#FF0000\",\r\n        grey: \"#CBCAB6\",\r\n        lightGrey: \"#E8EBE0\", //ccc\r\n        silver: \"#E8F2EB\", //ddd\r\n\r\n    },\r\n    breakpoints: {\r\n        mobileMax: 767,\r\n    },\r\n};\r\n\r\n"],"sourceRoot":""}